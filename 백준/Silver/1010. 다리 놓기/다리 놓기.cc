// 문제 분석
/*
 N은 M보다 클 수 없음
 -> 이걸 기반으로 N이 1~n까지 / M이 1~m 까지 한번 규칙을 찾아보기

| M \ N |    1    |    2    |      3      |    4    |    5    |
|-------|-----------------------------------------------------|
|   1   |    1    |    x    |      x      |    x    |    x    |
|-------|-----------------------------------------------------|
|   2   |    2    |    1    |      x      |    x    |    x    |
|-------|-----------------------------------------------------|
|   3   |    3    |   2+1   |      1      |    x    |    x    |
|-------|-----------------------------------------------------|
|   4   |    4    |  3+2+1  |    2+1+1    |    1    |    x    |
|-------|-----------------------------------------------------|
|   5   |    5    | 4+3+2+1 | 3+2+1+2+1+1 | 2+1+1+1 |    1    |
|-------|-----------------------------------------------------|
 
 (M, N)
 (3,2) = (2,1) + (2,2)
 (4,2) = (3,1) + (3,2)
 (4,3) = (3,2) + (3,3)

 1. N == M -> 1
 2. N이 1이고 M이 1이 아닌 경우 -> M가지
 3. 그 외에는 DP[M][N] = DP[M-1][N-1] + DP[M-1][N]
*/

#define MAX 30
#include <iostream>

using namespace std;

int DP[31][31];

void SetDP()
{
    // i -> M / j -> N
    for(int i = 1; i <= MAX; i++)
    {
        for(int j = 1; j <= i; j++)
        {
            if(i == j) DP[i][j] = 1;                                    // 1. 둘이 같은 경우 = 무조건 1가지
            else if(j == 1) DP[i][j] = i;                               // 2. 둘이 다르고 i가 1인 경우 무조건 j가지
            else DP[i][j] = DP[i-1][j-1] + DP[i-1][j];                  // 3. 그 외
        }
    }
}

void input()
{
    int T, N, M;
    cin >> T;

    for(int i = 0; i < T; i++)
    {
        cin >> N >> M;
        cout << DP[M][N] << "\n";
    } 
}

int main(void)
{
    SetDP();
    input();
}